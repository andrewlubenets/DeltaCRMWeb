/*Copyright (c) 2018-2019 deltadatamandiri.com All Rights Reserved.
 This software is the confidential and proprietary information of deltadatamandiri.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with deltadatamandiri.com*/
package com.crmweb.crm;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.ForeignKey;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

/**
 * Locations generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`locations`")
public class Locations implements Serializable {

    private Integer id;
    private String code;
    private String name;
    private String country;
    private Integer entityid;
    private String statusVal;
    private Entities entities;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`id`", nullable = false, scale = 0, precision = 10)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "`code`", nullable = true, length = 255)
    public String getCode() {
        return this.code;
    }

    public void setCode(String code) {
        this.code = code;
    }

    @Column(name = "`name`", nullable = true, length = 255)
    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @Column(name = "`country`", nullable = true, length = 255)
    public String getCountry() {
        return this.country;
    }

    public void setCountry(String country) {
        this.country = country;
    }

    @Column(name = "`entityid`", nullable = true, scale = 0, precision = 10)
    public Integer getEntityid() {
        return this.entityid;
    }

    public void setEntityid(Integer entityid) {
        this.entityid = entityid;
    }

    @Column(name = "`status_val`", nullable = true, length = 255)
    public String getStatusVal() {
        return this.statusVal;
    }

    public void setStatusVal(String statusVal) {
        this.statusVal = statusVal;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`entityid`", referencedColumnName = "`id`", insertable = false, updatable = false, foreignKey = @ForeignKey(name = "`locations_ibfk_1`"))
    @Fetch(FetchMode.JOIN)
    public Entities getEntities() {
        return this.entities;
    }

    public void setEntities(Entities entities) {
        if(entities != null) {
            this.entityid = entities.getId();
        }

        this.entities = entities;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Locations)) return false;
        final Locations locations = (Locations) o;
        return Objects.equals(getId(), locations.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}